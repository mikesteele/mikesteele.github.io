{"version":3,"sources":["Image.js","Cube.js","index.js"],"names":["Image","url","texture","opacity","scale","useMemo","THREE","load","attach","object","setCanvasCursor","cursor","document","querySelector","style","wobblyConfig","tension","friction","Cube","props","isInteractive","isRotating","xPosition","xRotation","yRotation","zRotation","yPosition","zPosition","xScale","yScale","zScale","onChangeHelperTextState","helperTextLabel","hoverColor","href","showWireframe","hoverImage","hoverCanvasBg","React","useState","imageMaterialSrc","setImageMaterialSrc","styles","color","isWireframe","previousStyles","setStyles","cubeRef","useRef","useFrame","current","rotation","x","y","onPointerOver","bgImageSrc","canvas","backgroundImage","backgroundSize","setCanvasBg","onPointerOut","top","left","text","isVisible","onPointerMove","e","clientY","clientX","onClick","window","open","from","to","config","spring","scaleNum","Number","geometry","material","wireframe","ref","position","undefined","args","MorphCube","scales","cube1XScale","cube2XScale","cube3XScale","cube4XScale","previousScales","setScales","previousShape","shape","shapes","cube","cube1XPosition","cube1YPosition","cube1IsRotating","cube2XPosition","cube2YPosition","cube2IsRotating","cube3XPosition","cube3YPosition","cube3IsRotating","cube4XPosition","cube4YPosition","cube4IsRotating","none","projects","springConfig","onMouseOverCube1","onMouseOutCube1","cubesAreInteractive","ReactDOM","render","setShapes","helperTextState","setHelperTextState","className","background","padding","zIndex","pointerEvents","margin","camera","intensity","angle","penumbra","castShadow","state","getElementById"],"mappings":"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","file":"static/js/main.1ee27b7b.chunk.js","sourcesContent":["import * as THREE from 'three/src/Three'\nimport React, { useMemo } from 'react'\n\nfunction Image({ url, opacity, scale, ...props }) {\n  const texture = useMemo(() => new THREE.TextureLoader().load(url), [url])\n  return (\n    <meshLambertMaterial attach=\"material\" >\n      <primitive attach=\"map\" object={texture} />\n    </meshLambertMaterial>\n  )\n}\n\nexport default Image;\n","import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { Spring, config } from 'react-spring/renderprops';\nimport ReactDOM from 'react-dom';\nimport Image from './Image';\n\nconst setCanvasCursor = cursor => {\n  document.querySelector('canvas').style.cursor = cursor;\n}\n\nconst setCanvasBg = bgImageSrc => {\n  const canvas = document.querySelector('canvas');\n  canvas.style.backgroundImage = `url(${bgImageSrc})`;\n  canvas.style.backgroundSize = 'cover';\n}\n\nconst resetCanvasBg = () => {\n  const canvas = document.querySelector('canvas');\n  canvas.style.backgroundImage = '';\n}\n\nconst wobblyConfig = { tension: 200, friction: 10 };\n\nconst Cube = props => {\n  const {\n    isInteractive,\n    isRotating,\n    xRotation,\n    yRotation,\n    zRotation,\n    xPosition,\n    yPosition,\n    zPosition,\n    xScale,\n    yScale,\n    zScale,\n    onChangeHelperTextState,\n    helperTextLabel,\n    hoverColor,\n    href,\n    showWireframe,\n    hoverImage,\n    hoverCanvasBg,\n  } = props;\n  const [imageMaterialSrc, setImageMaterialSrc] = React.useState('');\n  const [styles, setStyles] = React.useState({\n    styles: {\n      scale: '1',\n      color: 'white',\n      isWireframe: false\n    },\n    previousStyles: {\n      scale: '1',\n      color: 'white',\n      isWireframe: true\n    }\n  });\n  const cubeRef = useRef();\n  useFrame(() => {\n    if (isRotating) {\n      cubeRef.current.rotation.x = cubeRef.current.rotation.x + 0.01\n      cubeRef.current.rotation.y = cubeRef.current.rotation.y + 0.01\n    }\n  });\n\n  const onPointerOver = () => {\n    setStyles({\n      styles: {\n        scale: '1.5',\n        color: hoverColor,\n        isWireframe: true\n      },\n      previousStyles: {\n        scale: '1',\n        color: 'white',\n        isWireframe: false\n      }\n    });\n    setImageMaterialSrc(hoverImage);\n    setCanvasBg(hoverCanvasBg);\n  }\n\n  const onPointerOut = () => {\n    setCanvasCursor('default');\n    setStyles({\n      styles: {\n        scale: '1',\n        color: 'white',\n        isWireframe: false\n      },\n      previousStyles: {\n        scale: '1.5',\n        color: hoverColor,\n        isWireframe: true\n      }\n    });\n    setImageMaterialSrc('');\n    onChangeHelperTextState({\n      top: 0,\n      left: 0,\n      text: '',\n      isVisible: false\n    });\n    resetCanvasBg();\n  }\n\n  const onPointerMove = e => {\n    setCanvasCursor('pointer');\n    onChangeHelperTextState({\n      top: e.clientY,\n      left: e.clientX,\n      text: helperTextLabel,\n      isVisible: true\n    })\n  }\n\n  const onClick = () => {\n    window.open(href)\n  }\n\n  return (\n\n      <Spring\n        from={{\n          ...styles.previousStyles\n        }}\n        to={{\n          ...styles.styles\n        }}\n        config={wobblyConfig}\n      >\n      {spring => {\n        const {\n          scale,\n          color\n        } = spring;\n        const scaleNum = Number(scale);\n        const geometry = [\n          xScale * scaleNum,\n          yScale * scaleNum,\n          zScale * scaleNum\n        ];\n        let material = (\n          <meshNormalMaterial color={color} attach=\"material\" />\n        );\n        if (imageMaterialSrc) {\n          material = (\n            <Image url={imageMaterialSrc} />\n          )\n        } else if (showWireframe) {\n          material = (\n            <meshNormalMaterial wireframe color={color} attach=\"material\" />\n          );\n        }\n        return (\n          <mesh\n            ref={cubeRef}\n            position={[xPosition, yPosition, zPosition]}\n            onPointerOver={isInteractive ? onPointerOver : undefined}\n            onPointerMove={isInteractive ? onPointerMove : undefined}\n            onPointerOut={isInteractive ? onPointerOut : undefined}\n            onClick={isInteractive ? onClick : undefined}\n          >\n            <boxBufferGeometry attach=\"geometry\" args={geometry} />\n            { material }\n          </mesh>\n\n        )\n      }}\n      </Spring>\n\n  );\n};\n\nexport default Cube;\n","import React, { useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport './index.css';\nimport Image from './Image';\nimport { Spring, config } from 'react-spring/renderprops'\nimport useInterval from './useInterval';\n\nimport Cube from './Cube';\n\nconst MorphCube = props => {\n  const [scales, setScales] = React.useState({\n    scales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    },\n    previousScales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    }\n  });\n  const { previousShape, shape, onChangeHelperTextState } = props;\n  const shapes = {\n    cube: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    none: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    projects: {\n      cube1XPosition: 1,\n      cube1YPosition: 0.5,\n      cube1IsRotating: true,\n      cube2XPosition: 1,\n      cube2YPosition: -0.5,\n      cube2IsRotating: true,\n      cube3XPosition: -1,\n      cube3YPosition: 0.5,\n      cube3IsRotating: true,\n      cube4XPosition: -1,\n      cube4YPosition: -0.5,\n      cube4IsRotating: true,\n    }\n  }\n\n  const wobblyConfig = { tension: 200, friction: 10 };\n  const springConfig = wobblyConfig;\n\n  const onMouseOverCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const onMouseOutCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const cubesAreInteractive = shape === 'projects';\n\n  return (\n    <Spring\n      from={{\n        ...shapes[previousShape],\n        ...scales.previousScales\n      }}\n      to={{\n        ...shapes[shape],\n        ...scales.scales\n      }}\n      config={springConfig}\n    >\n      {props => {\n        const {\n          cube1XScale,\n          cube1XPosition,\n          cube1YPosition,\n          cube1IsRotating,\n          cube2XScale,\n          cube2XPosition,\n          cube2YPosition,\n          cube2IsRotating,\n          cube3XScale,\n          cube3XPosition,\n          cube3YPosition,\n          cube3IsRotating,\n          cube4XScale,\n          cube4XPosition,\n          cube4YPosition,\n          cube4IsRotating,\n        } = props;\n        return (\n          <>\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube1XPosition}\n              yPosition={cube1YPosition}\n              zPosition={0}\n              xScale={cube1XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube1IsRotating}\n              onPointerOver={onMouseOverCube1}\n              onPointerOut={onMouseOutCube1}\n              isInteractive={false}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel=''\n              href=''\n              hoverColor=''\n              showWireframe={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube2XPosition}\n              yPosition={cube2YPosition}\n              zPosition={0}\n              xScale={cube2XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube2IsRotating}\n              isInteractive={false}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel=''\n              href=''\n              hoverColor=''\n              showWireframe={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube3XPosition}\n              yPosition={cube3YPosition}\n              zPosition={0}\n              xScale={cube3XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube3IsRotating}\n              onChangeHelperTextState={onChangeHelperTextState}\n              isInteractive={cubesAreInteractive}\n              helperTextLabel='GitHub'\n              href='https://github.com/mikesteele'\n              hoverColor='salmon'\n              hoverImage='code-lyoko.jpg'\n              hoverCanvasBg='binary-bg.gif'\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube4XPosition}\n              yPosition={cube4YPosition}\n              zPosition={0}\n              xScale={cube4XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube4IsRotating}\n              onChangeHelperTextState={onChangeHelperTextState}\n              isInteractive={cubesAreInteractive}\n              helperTextLabel='LinkedIn'\n              href='https://www.linkedin.com/in/mikesteeledev/'\n              hoverColor='gold'\n              hoverImage='briefcase.jpg'\n              hoverCanvasBg='linkedin.gif'\n            />\n          </>\n        );\n      }}\n      </Spring>\n  )\n}\n\nconst App = () => {\n  const [shapes, setShapes] = React.useState({\n    shape: 'cube',\n    previousShape: 'none'\n  });\n  const [helperTextState, setHelperTextState] = React.useState({\n    top: 0,\n    left: 0,\n    isVisible: false,\n    text: ''\n  });\n  const onMouseOver = () => {\n    setShapes({\n      shape: 'projects',\n      previousShape: 'cube'\n    });\n  }\n  const onChangeHelperTextState = state => {\n    setHelperTextState(state);\n  }\n  return (\n    <>\n      {shapes.shape !== 'projects' && (\n        <div className='heading' onClick={onMouseOver}>Enter</div>\n      )}\n      {helperTextState.isVisible && (\n        <div style={{\n          position: 'fixed',\n          background: 'white',\n          top: helperTextState.top,\n          left: helperTextState.left,\n          padding: 32,\n          zIndex: 10,\n          pointerEvents: 'none',\n          margin: 16\n        }}>{helperTextState.text}</div>\n      )}\n      <Canvas camera={{ position: [0, 0, 2] }}>\n        <ambientLight intensity={0.5} />\n        <spotLight intensity={0.6} position={[30, 30, 50]} angle={0.2} penumbra={1} castShadow />\n        <MorphCube onChangeHelperTextState={onChangeHelperTextState} shape={shapes.shape} previousShape={shapes.previousShape} />\n      </Canvas>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}