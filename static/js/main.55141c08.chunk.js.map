{"version":3,"sources":["Image.js","Cube.js","index.js"],"names":["Image","setCanvasCursor","cursor","document","querySelector","style","wobblyConfig","tension","friction","Cube","props","isInteractive","isRotating","xPosition","xRotation","yRotation","zRotation","yPosition","zPosition","xScale","yScale","zScale","onChangeHelperTextState","helperTextLabel","React","useState","styles","scale","color","isWireframe","previousStyles","setStyles","cubeRef","useRef","useFrame","current","rotation","x","y","onPointerOver","onPointerOut","top","left","text","isVisible","from","to","config","spring","scaleNum","Number","geometry","ref","position","undefined","onPointerMove","e","clientY","clientX","attach","args","wireframe","MorphCube","scales","cube1XScale","cube2XScale","cube3XScale","cube4XScale","previousScales","setScales","previousShape","shape","shapes","cube","cube1XPosition","cube1YPosition","cube1IsRotating","cube2XPosition","cube2YPosition","cube2IsRotating","cube3XPosition","cube3YPosition","cube3IsRotating","cube4XPosition","cube4YPosition","cube4IsRotating","none","projects","springConfig","onMouseOverCube1","onMouseOutCube1","cubesAreInteractive","ReactDOM","render","setShapes","helperTextState","setHelperTextState","className","onClick","background","padding","zIndex","pointerEvents","margin","camera","intensity","angle","penumbra","castShadow","state","getElementById"],"mappings":"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","file":"static/js/main.55141c08.chunk.js","sourcesContent":["import * as THREE from 'three/src/Three'\nimport React, { useMemo } from 'react'\n\nfunction Image({ url, opacity, scale, ...props }) {\n  const texture = useMemo(() => new THREE.TextureLoader().load(url), [url])\n  return (\n    <meshLambertMaterial attach=\"material\" >\n      <primitive attach=\"map\" object={texture} />\n    </meshLambertMaterial>\n  )\n}\n\nexport default Image;\n","import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { Spring, config } from 'react-spring/renderprops';\nimport ReactDOM from 'react-dom';\n\nconst setCanvasCursor = cursor => {\n  document.querySelector('canvas').style.cursor = cursor;\n}\n\nconst wobblyConfig = { tension: 200, friction: 10 };\n\nconst Cube = props => {\n  const {\n    isInteractive,\n    isRotating,\n    xRotation,\n    yRotation,\n    zRotation,\n    xPosition,\n    yPosition,\n    zPosition,\n    xScale,\n    yScale,\n    zScale,\n    onChangeHelperTextState,\n    helperTextLabel\n  } = props;\n  const [styles, setStyles] = React.useState({\n    styles: {\n      scale: '1',\n      color: 'white',\n      isWireframe: false\n    },\n    previousStyles: {\n      scale: '1',\n      color: 'white',\n      isWireframe: true\n    }\n  });\n  const cubeRef = useRef();\n  useFrame(() => {\n    if (isRotating) {\n      cubeRef.current.rotation.x = cubeRef.current.rotation.x + 0.01\n      cubeRef.current.rotation.y = cubeRef.current.rotation.y + 0.01\n    }\n  });\n\n  const onPointerOver = () => {\n    setStyles({\n      styles: {\n        scale: '1.5',\n        color: 'red',\n        isWireframe: true\n      },\n      previousStyles: {\n        scale: '1',\n        color: 'white',\n        isWireframe: false\n      }\n    });\n  }\n\n  const onPointerOut = () => {\n    setCanvasCursor('default');\n    setStyles({\n      styles: {\n        scale: '1',\n        color: 'white',\n        isWireframe: false\n      },\n      previousStyles: {\n        scale: '1.5',\n        color: 'red',\n        isWireframe: true\n      }\n    });\n    onChangeHelperTextState({\n      top: 0,\n      left: 0,\n      text: '',\n      isVisible: false\n    })\n  }\n\n  return (\n\n      <Spring\n        from={{\n          ...styles.previousStyles\n        }}\n        to={{\n          ...styles.styles\n        }}\n        config={wobblyConfig}\n      >\n      {spring => {\n        const {\n          scale,\n          color\n        } = spring;\n        const scaleNum = Number(scale);\n        const geometry = [\n          xScale * scaleNum,\n          yScale * scaleNum,\n          zScale * scaleNum\n        ];\n        return (\n          <mesh\n            ref={cubeRef}\n            position={[xPosition, yPosition, zPosition]}\n            onPointerOver={isInteractive ? onPointerOver : undefined}\n            onPointerMove={e => {\n              setCanvasCursor('pointer');\n              onChangeHelperTextState({\n                top: e.clientY,\n                left: e.clientX,\n                text: helperTextLabel,\n                isVisible: true\n              })\n            }}\n            onPointerOut={isInteractive ? onPointerOut : undefined}\n          >\n            <boxBufferGeometry attach=\"geometry\" args={geometry} />\n            {styles.isWireframe ? (\n              <meshBasicMaterial wireframe attach=\"material\" />\n            ) : (\n              <meshLambertMaterial color={color} attach=\"material\" />\n            )}\n          </mesh>\n\n        )\n      }}\n      </Spring>\n\n  );\n};\n\nexport default Cube;\n","import React, { useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport './index.css';\nimport Image from './Image';\nimport { Spring, config } from 'react-spring/renderprops'\nimport useInterval from './useInterval';\n\nimport Cube from './Cube';\n\nconst MorphCube = props => {\n  const [scales, setScales] = React.useState({\n    scales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    },\n    previousScales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    }\n  });\n  const { previousShape, shape, onChangeHelperTextState } = props;\n  const shapes = {\n    cube: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    none: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    projects: {\n      cube1XPosition: 1,\n      cube1YPosition: 0.5,\n      cube1IsRotating: true,\n      cube2XPosition: 1,\n      cube2YPosition: -0.5,\n      cube2IsRotating: true,\n      cube3XPosition: -1,\n      cube3YPosition: 0.5,\n      cube3IsRotating: true,\n      cube4XPosition: -1,\n      cube4YPosition: -0.5,\n      cube4IsRotating: true,\n    }\n  }\n\n  const wobblyConfig = { tension: 200, friction: 10 };\n  const springConfig = wobblyConfig;\n\n  const onMouseOverCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const onMouseOutCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const cubesAreInteractive = shape === 'projects';\n\n  return (\n    <Spring\n      from={{\n        ...shapes[previousShape],\n        ...scales.previousScales\n      }}\n      to={{\n        ...shapes[shape],\n        ...scales.scales\n      }}\n      config={springConfig}\n    >\n      {props => {\n        const {\n          cube1XScale,\n          cube1XPosition,\n          cube1YPosition,\n          cube1IsRotating,\n          cube2XScale,\n          cube2XPosition,\n          cube2YPosition,\n          cube2IsRotating,\n          cube3XScale,\n          cube3XPosition,\n          cube3YPosition,\n          cube3IsRotating,\n          cube4XScale,\n          cube4XPosition,\n          cube4YPosition,\n          cube4IsRotating,\n        } = props;\n        return (\n          <>\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube1XPosition}\n              yPosition={cube1YPosition}\n              zPosition={0}\n              xScale={cube1XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube1IsRotating}\n              onPointerOver={onMouseOverCube1}\n              onPointerOut={onMouseOutCube1}\n              isInteractive={cubesAreInteractive}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel='Projects'\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube2XPosition}\n              yPosition={cube2YPosition}\n              zPosition={0}\n              xScale={cube2XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube2IsRotating}\n              isInteractive={cubesAreInteractive}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel='Art'\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube3XPosition}\n              yPosition={cube3YPosition}\n              zPosition={0}\n              xScale={cube3XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube3IsRotating}\n              isInteractive={cubesAreInteractive}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel='Writing'\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube4XPosition}\n              yPosition={cube4YPosition}\n              zPosition={0}\n              xScale={cube4XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube4IsRotating}\n              isInteractive={cubesAreInteractive}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel='Etc'\n            />\n          </>\n        );\n      }}\n      </Spring>\n  )\n}\n\nconst App = () => {\n  const [shapes, setShapes] = React.useState({\n    shape: 'cube',\n    previousShape: 'none'\n  });\n  const [helperTextState, setHelperTextState] = React.useState({\n    top: 0,\n    left: 0,\n    isVisible: false,\n    text: ''\n  });\n  const onMouseOver = () => {\n    setShapes({\n      shape: 'projects',\n      previousShape: 'cube'\n    });\n  }\n  const onChangeHelperTextState = state => {\n    setHelperTextState(state);\n  }\n  return (\n    <>\n      {shapes.shape !== 'projects' && (\n        <div className='heading' onClick={onMouseOver}>Enter</div>\n      )}\n      {helperTextState.isVisible && (\n        <div style={{\n          position: 'fixed',\n          background: 'white',\n          top: helperTextState.top,\n          left: helperTextState.left,\n          padding: 32,\n          zIndex: 10,\n          pointerEvents: 'none',\n          margin: 16\n        }}>{helperTextState.text}</div>\n      )}\n      <Canvas camera={{ position: [0, 0, 2] }}>\n        <ambientLight intensity={0.5} />\n        <spotLight intensity={0.6} position={[30, 30, 50]} angle={0.2} penumbra={1} castShadow />\n        <MorphCube onChangeHelperTextState={onChangeHelperTextState} shape={shapes.shape} previousShape={shapes.previousShape} />\n      </Canvas>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}