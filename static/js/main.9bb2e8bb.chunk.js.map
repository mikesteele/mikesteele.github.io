{"version":3,"sources":["Image.js","Cube.js","index.js"],"names":["Image","setCanvasCursor","cursor","document","querySelector","style","wobblyConfig","tension","friction","Cube","props","isInteractive","isRotating","xPosition","xRotation","yRotation","zRotation","yPosition","zPosition","xScale","yScale","zScale","onChangeHelperTextState","helperTextLabel","hoverColor","href","showWireframe","React","useState","styles","scale","color","isWireframe","previousStyles","setStyles","cubeRef","useRef","useFrame","current","rotation","x","y","onPointerOver","onPointerOut","top","left","text","isVisible","onPointerMove","e","clientY","clientX","onClick","window","open","from","to","config","spring","scaleNum","Number","geometry","ref","position","undefined","attach","args","wireframe","MorphCube","scales","cube1XScale","cube2XScale","cube3XScale","cube4XScale","previousScales","setScales","previousShape","shape","shapes","cube","cube1XPosition","cube1YPosition","cube1IsRotating","cube2XPosition","cube2YPosition","cube2IsRotating","cube3XPosition","cube3YPosition","cube3IsRotating","cube4XPosition","cube4YPosition","cube4IsRotating","none","projects","springConfig","onMouseOverCube1","onMouseOutCube1","cubesAreInteractive","ReactDOM","render","setShapes","helperTextState","setHelperTextState","className","background","padding","zIndex","pointerEvents","margin","camera","intensity","angle","penumbra","castShadow","state","getElementById"],"mappings":"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","file":"static/js/main.9bb2e8bb.chunk.js","sourcesContent":["import * as THREE from 'three/src/Three'\nimport React, { useMemo } from 'react'\n\nfunction Image({ url, opacity, scale, ...props }) {\n  const texture = useMemo(() => new THREE.TextureLoader().load(url), [url])\n  return (\n    <meshLambertMaterial attach=\"material\" >\n      <primitive attach=\"map\" object={texture} />\n    </meshLambertMaterial>\n  )\n}\n\nexport default Image;\n","import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { Spring, config } from 'react-spring/renderprops';\nimport ReactDOM from 'react-dom';\n\nconst setCanvasCursor = cursor => {\n  document.querySelector('canvas').style.cursor = cursor;\n}\n\nconst wobblyConfig = { tension: 200, friction: 10 };\n\nconst Cube = props => {\n  const {\n    isInteractive,\n    isRotating,\n    xRotation,\n    yRotation,\n    zRotation,\n    xPosition,\n    yPosition,\n    zPosition,\n    xScale,\n    yScale,\n    zScale,\n    onChangeHelperTextState,\n    helperTextLabel,\n    hoverColor,\n    href,\n    showWireframe\n  } = props;\n  const [styles, setStyles] = React.useState({\n    styles: {\n      scale: '1',\n      color: 'white',\n      isWireframe: false\n    },\n    previousStyles: {\n      scale: '1',\n      color: 'white',\n      isWireframe: true\n    }\n  });\n  const cubeRef = useRef();\n  useFrame(() => {\n    if (isRotating) {\n      cubeRef.current.rotation.x = cubeRef.current.rotation.x + 0.01\n      cubeRef.current.rotation.y = cubeRef.current.rotation.y + 0.01\n    }\n  });\n\n  const onPointerOver = () => {\n    setStyles({\n      styles: {\n        scale: '1.5',\n        color: hoverColor,\n        isWireframe: true\n      },\n      previousStyles: {\n        scale: '1',\n        color: 'white',\n        isWireframe: false\n      }\n    });\n  }\n\n  const onPointerOut = () => {\n    setCanvasCursor('default');\n    setStyles({\n      styles: {\n        scale: '1',\n        color: 'white',\n        isWireframe: false\n      },\n      previousStyles: {\n        scale: '1.5',\n        color: hoverColor,\n        isWireframe: true\n      }\n    });\n    onChangeHelperTextState({\n      top: 0,\n      left: 0,\n      text: '',\n      isVisible: false\n    })\n  }\n\n  const onPointerMove = e => {\n    setCanvasCursor('pointer');\n    onChangeHelperTextState({\n      top: e.clientY,\n      left: e.clientX,\n      text: helperTextLabel,\n      isVisible: true\n    })\n  }\n\n  const onClick = () => {\n    window.open(href)\n  }\n\n  return (\n\n      <Spring\n        from={{\n          ...styles.previousStyles\n        }}\n        to={{\n          ...styles.styles\n        }}\n        config={wobblyConfig}\n      >\n      {spring => {\n        const {\n          scale,\n          color\n        } = spring;\n        const scaleNum = Number(scale);\n        const geometry = [\n          xScale * scaleNum,\n          yScale * scaleNum,\n          zScale * scaleNum\n        ];\n        return (\n          <mesh\n            ref={cubeRef}\n            position={[xPosition, yPosition, zPosition]}\n            onPointerOver={isInteractive ? onPointerOver : undefined}\n            onPointerMove={isInteractive ? onPointerMove : undefined}\n            onPointerOut={isInteractive ? onPointerOut : undefined}\n            onClick={isInteractive ? onClick : undefined}\n          >\n            <boxBufferGeometry attach=\"geometry\" args={geometry} />\n            {showWireframe ? (\n              <meshNormalMaterial wireframe color={color} attach=\"material\" />\n            ) : (\n              <meshNormalMaterial color={color} attach=\"material\" />\n            )}\n          </mesh>\n\n        )\n      }}\n      </Spring>\n\n  );\n};\n\nexport default Cube;\n","import React, { useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport './index.css';\nimport Image from './Image';\nimport { Spring, config } from 'react-spring/renderprops'\nimport useInterval from './useInterval';\n\nimport Cube from './Cube';\n\nconst MorphCube = props => {\n  const [scales, setScales] = React.useState({\n    scales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    },\n    previousScales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    }\n  });\n  const { previousShape, shape, onChangeHelperTextState } = props;\n  const shapes = {\n    cube: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    none: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    projects: {\n      cube1XPosition: 1,\n      cube1YPosition: 0.5,\n      cube1IsRotating: true,\n      cube2XPosition: 1,\n      cube2YPosition: -0.5,\n      cube2IsRotating: true,\n      cube3XPosition: -1,\n      cube3YPosition: 0.5,\n      cube3IsRotating: true,\n      cube4XPosition: -1,\n      cube4YPosition: -0.5,\n      cube4IsRotating: true,\n    }\n  }\n\n  const wobblyConfig = { tension: 200, friction: 10 };\n  const springConfig = wobblyConfig;\n\n  const onMouseOverCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const onMouseOutCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const cubesAreInteractive = shape === 'projects';\n\n  return (\n    <Spring\n      from={{\n        ...shapes[previousShape],\n        ...scales.previousScales\n      }}\n      to={{\n        ...shapes[shape],\n        ...scales.scales\n      }}\n      config={springConfig}\n    >\n      {props => {\n        const {\n          cube1XScale,\n          cube1XPosition,\n          cube1YPosition,\n          cube1IsRotating,\n          cube2XScale,\n          cube2XPosition,\n          cube2YPosition,\n          cube2IsRotating,\n          cube3XScale,\n          cube3XPosition,\n          cube3YPosition,\n          cube3IsRotating,\n          cube4XScale,\n          cube4XPosition,\n          cube4YPosition,\n          cube4IsRotating,\n        } = props;\n        return (\n          <>\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube1XPosition}\n              yPosition={cube1YPosition}\n              zPosition={0}\n              xScale={cube1XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube1IsRotating}\n              onPointerOver={onMouseOverCube1}\n              onPointerOut={onMouseOutCube1}\n              isInteractive={false}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel=''\n              href=''\n              hoverColor=''\n              showWireframe={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube2XPosition}\n              yPosition={cube2YPosition}\n              zPosition={0}\n              xScale={cube2XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube2IsRotating}\n              isInteractive={false}\n              onChangeHelperTextState={onChangeHelperTextState}\n              helperTextLabel=''\n              href=''\n              hoverColor=''\n              showWireframe={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube3XPosition}\n              yPosition={cube3YPosition}\n              zPosition={0}\n              xScale={cube3XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube3IsRotating}\n              onChangeHelperTextState={onChangeHelperTextState}\n              isInteractive={cubesAreInteractive}\n              helperTextLabel='GitHub'\n              href='https://github.com/mikesteele'\n              hoverColor='salmon'\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube4XPosition}\n              yPosition={cube4YPosition}\n              zPosition={0}\n              xScale={cube4XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube4IsRotating}\n              onChangeHelperTextState={onChangeHelperTextState}\n              isInteractive={cubesAreInteractive}\n              helperTextLabel='LinkedIn'\n              href='https://www.linkedin.com/in/mikesteeledev/'\n              hoverColor='gold'\n            />\n          </>\n        );\n      }}\n      </Spring>\n  )\n}\n\nconst App = () => {\n  const [shapes, setShapes] = React.useState({\n    shape: 'cube',\n    previousShape: 'none'\n  });\n  const [helperTextState, setHelperTextState] = React.useState({\n    top: 0,\n    left: 0,\n    isVisible: false,\n    text: ''\n  });\n  const onMouseOver = () => {\n    setShapes({\n      shape: 'projects',\n      previousShape: 'cube'\n    });\n  }\n  const onChangeHelperTextState = state => {\n    setHelperTextState(state);\n  }\n  return (\n    <>\n      {shapes.shape !== 'projects' && (\n        <div className='heading' onClick={onMouseOver}>Enter</div>\n      )}\n      {helperTextState.isVisible && (\n        <div style={{\n          position: 'fixed',\n          background: 'white',\n          top: helperTextState.top,\n          left: helperTextState.left,\n          padding: 32,\n          zIndex: 10,\n          pointerEvents: 'none',\n          margin: 16\n        }}>{helperTextState.text}</div>\n      )}\n      <Canvas camera={{ position: [0, 0, 2] }}>\n        <ambientLight intensity={0.5} />\n        <spotLight intensity={0.6} position={[30, 30, 50]} angle={0.2} penumbra={1} castShadow />\n        <MorphCube onChangeHelperTextState={onChangeHelperTextState} shape={shapes.shape} previousShape={shapes.previousShape} />\n      </Canvas>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}