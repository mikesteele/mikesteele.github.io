{"version":3,"sources":["Image.js","Cube.js","index.js"],"names":["Image","setCanvasCursor","cursor","document","querySelector","style","wobblyConfig","tension","friction","Cube","props","isInteractive","isRotating","xPosition","xRotation","yRotation","zRotation","yPosition","zPosition","xScale","yScale","zScale","React","useState","styles","scale","color","previousStyles","setStyles","cubeRef","useRef","useFrame","current","rotation","x","y","onPointerOver","onPointerOut","from","to","config","spring","scaleNum","Number","geometry","ref","position","undefined","attach","args","MorphCube","scales","cube1XScale","cube2XScale","cube3XScale","cube4XScale","previousScales","setScales","previousShape","shape","shapes","cube","cube1XPosition","cube1YPosition","cube1IsRotating","cube2XPosition","cube2YPosition","cube2IsRotating","cube3XPosition","cube3YPosition","cube3IsRotating","cube4XPosition","cube4YPosition","cube4IsRotating","none","projects","springConfig","onMouseOverCube1","onMouseOutCube1","cubesAreInteractive","ReactDOM","render","setShapes","className","onClick","camera","intensity","angle","penumbra","castShadow","getElementById"],"mappings":"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","file":"static/js/main.6fa7f291.chunk.js","sourcesContent":["import * as THREE from 'three/src/Three'\nimport React, { useMemo } from 'react'\n\nfunction Image({ url, opacity, scale, ...props }) {\n  const texture = useMemo(() => new THREE.TextureLoader().load(url), [url])\n  return (\n    <meshLambertMaterial attach=\"material\" >\n      <primitive attach=\"map\" object={texture} />\n    </meshLambertMaterial>\n  )\n}\n\nexport default Image;\n","import React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { Spring, config } from 'react-spring/renderprops';\n\nconst setCanvasCursor = cursor => {\n  document.querySelector('canvas').style.cursor = cursor;\n}\n\nconst wobblyConfig = { tension: 200, friction: 10 };\n\nconst Cube = props => {\n  const {\n    isInteractive,\n    isRotating,\n    xRotation,\n    yRotation,\n    zRotation,\n    xPosition,\n    yPosition,\n    zPosition,\n    xScale,\n    yScale,\n    zScale,\n  } = props;\n  const [styles, setStyles] = React.useState({\n    styles: {\n      scale: '1',\n      color: 'white'\n    },\n    previousStyles: {\n      scale: '1',\n      color: 'white'\n    }\n  });\n  const cubeRef = useRef();\n  useFrame(() => {\n    if (isRotating) {\n      cubeRef.current.rotation.x = cubeRef.current.rotation.x + 0.01\n      cubeRef.current.rotation.y = cubeRef.current.rotation.y + 0.01\n    }\n  });\n\n  const onPointerOver = () => {\n    setCanvasCursor('pointer');\n    setStyles({\n      styles: {\n        scale: '1.5',\n        color: 'red'\n      },\n      previousStyles: {\n        scale: '1',\n        color: 'white'\n      }\n    });\n  }\n\n  const onPointerOut = () => {\n    setCanvasCursor('default');\n    setStyles({\n      styles: {\n        scale: '1',\n        color: 'white'\n      },\n      previousStyles: {\n        scale: '1.5',\n        color: 'red'\n      }\n    });\n  }\n\n  return (\n    <Spring\n      from={{\n        ...styles.previousStyles\n      }}\n      to={{\n        ...styles.styles\n      }}\n      config={wobblyConfig}\n    >\n    {spring => {\n      const {\n        scale,\n        color\n      } = spring;\n      const scaleNum = Number(scale);\n      const geometry = [\n        xScale * scaleNum,\n        yScale * scaleNum,\n        zScale * scaleNum\n      ];\n      return (\n        <mesh\n          ref={cubeRef}\n          position={[xPosition, yPosition, zPosition]}\n          onPointerOver={isInteractive ? onPointerOver : undefined}\n          onPointerOut={isInteractive ? onPointerOut : undefined}\n        >\n          <boxBufferGeometry attach=\"geometry\" args={geometry} />\n          <meshPhongMaterial color={color} attach=\"material\" />\n        </mesh>\n      )\n    }}\n    </Spring>\n  );\n};\n\nexport default Cube;\n","import React, { useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport './index.css';\nimport Image from './Image';\nimport { Spring, config } from 'react-spring/renderprops'\nimport useInterval from './useInterval';\n\nimport Cube from './Cube';\n\nconst MorphCube = props => {\n  const [scales, setScales] = React.useState({\n    scales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    },\n    previousScales: {\n      cube1XScale: 0.5,\n      cube2XScale: 0.5,\n      cube3XScale: 0.5,\n      cube4XScale: 0.5,\n    }\n  });\n  const { previousShape, shape } = props;\n  const shapes = {\n    cube: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    none: {\n      cube1XPosition: 0.25,\n      cube1YPosition: 0.25,\n      cube1IsRotating: false,\n      cube2XPosition: 0.25,\n      cube2YPosition: -0.25,\n      cube2IsRotating: false,\n      cube3XPosition: -0.25,\n      cube3YPosition: 0.25,\n      cube3IsRotating: false,\n      cube4XPosition: -0.25,\n      cube4YPosition: -0.25,\n      cube4IsRotating: false,\n    },\n    projects: {\n      cube1XPosition: 1,\n      cube1YPosition: 0.5,\n      cube1IsRotating: true,\n      cube2XPosition: 1,\n      cube2YPosition: -0.5,\n      cube2IsRotating: true,\n      cube3XPosition: -1,\n      cube3YPosition: 0.5,\n      cube3IsRotating: true,\n      cube4XPosition: -1,\n      cube4YPosition: -0.5,\n      cube4IsRotating: true,\n    }\n  }\n\n  const wobblyConfig = { tension: 200, friction: 10 };\n  const springConfig = wobblyConfig;\n\n  const onMouseOverCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const onMouseOutCube1 = () => {\n    setScales({\n      scales: {\n        cube1XScale: 0.5,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      },\n      previousScales: {\n        cube1XScale: 1,\n        cube2XScale: 0.5,\n        cube3XScale: 0.5,\n        cube4XScale: 0.5,\n      }\n    });\n  }\n\n  const cubesAreInteractive = shape === 'projects';\n\n  return (\n    <Spring\n      from={{\n        ...shapes[previousShape],\n        ...scales.previousScales\n      }}\n      to={{\n        ...shapes[shape],\n        ...scales.scales\n      }}\n      config={springConfig}\n    >\n      {props => {\n        const {\n          cube1XScale,\n          cube1XPosition,\n          cube1YPosition,\n          cube1IsRotating,\n          cube2XScale,\n          cube2XPosition,\n          cube2YPosition,\n          cube2IsRotating,\n          cube3XScale,\n          cube3XPosition,\n          cube3YPosition,\n          cube3IsRotating,\n          cube4XScale,\n          cube4XPosition,\n          cube4YPosition,\n          cube4IsRotating,\n        } = props;\n        return (\n          <>\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube1XPosition}\n              yPosition={cube1YPosition}\n              zPosition={0}\n              xScale={cube1XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube1IsRotating}\n              onPointerOver={onMouseOverCube1}\n              onPointerOut={onMouseOutCube1}\n              isInteractive={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube2XPosition}\n              yPosition={cube2YPosition}\n              zPosition={0}\n              xScale={cube2XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube2IsRotating}\n              isInteractive={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube3XPosition}\n              yPosition={cube3YPosition}\n              zPosition={0}\n              xScale={cube3XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube3IsRotating}\n              isInteractive={cubesAreInteractive}\n            />\n            <Cube\n              xRotation={0}\n              yRotation={0}\n              zRotation={0}\n              xPosition={cube4XPosition}\n              yPosition={cube4YPosition}\n              zPosition={0}\n              xScale={cube4XScale}\n              yScale={0.5}\n              zScale={0.5}\n              isRotating={cube4IsRotating}\n              isInteractive={cubesAreInteractive}\n            />\n          </>\n        );\n      }}\n      </Spring>\n  )\n}\n\nconst App = () => {\n  const [shapes, setShapes] = React.useState({\n    shape: 'cube',\n    previousShape: 'none'\n  });\n  const onMouseOver = () => {\n    setShapes({\n      shape: 'projects',\n      previousShape: 'cube'\n    });\n  }\n  return (\n    <>\n      {shapes.shape !== 'projects' && (\n        <div className='heading' onClick={onMouseOver}>Enter</div>\n      )}\n      <Canvas camera={{ position: [0, 0, 2] }}>\n        <ambientLight intensity={0.5} />\n        <spotLight intensity={0.6} position={[30, 30, 50]} angle={0.2} penumbra={1} castShadow />\n        <MorphCube shape={shapes.shape} previousShape={shapes.previousShape} />\n      </Canvas>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}